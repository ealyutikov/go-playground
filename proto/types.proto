syntax = "proto3";

option go_package = "github.com/elyutikov/goblockchain/proto";

service Node {
	rpc Handshake(Version) returns (Version);
	rpc HandleTransaction(Transaction) returns (Ack);
}

message Version {
	string version = 1;
	int32 height = 2;
	string listenAddr = 3;
	repeated string peerList = 4;
}

message Ack {}

message Block {
	Header header = 1;
	repeated Transaction transactions = 2;
 }

message Header {
	int32 version = 1;
	int32 height = 2;
	bytes prevHash = 3;
	bytes rootHash = 4; // merkle root of txs
	int64 timestamp = 5;
 }

 message TxInput {
	// The previous hash of the transaction containing
	// the output we want to spend.
	bytes prevTxHash = 1;
	// The index of the previous transaction we
	// want to spend
	uint32 prevOutIndex = 2;

	bytes publicKey = 3;
	bytes signature = 4;
 }

 message TxOutput {
	int64 amount = 1;
	bytes address = 2;
 }

 message Transaction {
	int32 verrsion = 1;
	repeated TxInput inputs = 2;
	repeated TxOutput outputs = 3;
}
